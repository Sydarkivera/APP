{"version":3,"sources":["src/app.ts","src/environment.ts","src/index.ts","src/main.ts","src/packageAdmin.ts","src/status.ts","src/resources/index.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  message = 'Hello World!';\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","/*! Copyright 2017 Axenu */\n\nimport {HttpClient} from 'aurelia-fetch-client';\n\nexport class Index {\n    title='S.A.W';\n    description='Välj ett paket att administrera';\n    packages = [];\n\n    constructor() {\n        let client = new HttpClient();\n        client.fetch('/api/package/')\n            .then(response => response.json())\n            .then(data => {\n                // console.log(data);\n                this.packages = data;\n            });\n    }\n\n    gotoPackageConfig(archive_package) {\n        window.location.href = \"/package/\"+archive_package+\"/\";\n    }\n}\n","/*! Copyright 2017 Axenu */\n\nimport {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(a => {\n      aurelia.setRoot(a.host.attributes['start'].value)\n  });\n}\n","/*! Copyright 2017 Axenu */\n\nimport {HttpClient, json} from 'aurelia-fetch-client';\n\ndeclare var package_id: any;\n\nexport class PackageAdmin {\n    title='S.A.W';\n    description='Välj vilka moduler som ska köras';\n    processes = [];\n    modules = [];\n    package = {};\n    selected_module = 0;\n    selected_process = 0;\n    active_process_values = {};\n    process_has_changed = false;\n    client = new HttpClient();\n\n    constructor() {\n        this.client = new HttpClient();\n        this.client.fetch('/api/package/'+package_id+'/')\n            .then(response => response.json())\n            .then(data => {\n                // console.log(data);\n                this.package = data;\n                this.processes = data[\"processes\"];\n                // this.processes = data;\n            });\n        this.client.fetch('/api/module/')\n            .then(response => response.json())\n            .then(data => {\n                this.modules = data;\n\n            });\n    }\n\n    clickProcess(process) {\n        if (this.selected_process == process.process_id) {\n            this.selected_process = 0;\n        } else {\n                this.selected_process = process.process_id;\n                this.active_process_values = process.value;\n        }\n    }\n\n    clickModule(module) {\n        // console.log(module.name);\n        if (this.selected_module == module.module_id) {\n            this.selected_module = 0;\n        } else {\n            this.selected_module = module.module_id;\n        }\n    }\n\n    addModule(module) {\n        //POST to create a new process from package_id and module_id\n        // post module, package and order\n        let data = {\"module\":module.module_id, \"package\":package_id}\n        if (this.processes.length > 0) {\n            data['order'] = this.processes[this.processes.length-1].order+1;\n        } else {\n            data['order'] = 0;\n        }\n        this.client.fetch('/api/process/', {\n            method: \"POST\",\n            body: json(data),\n        })\n            .then(response => response.json())\n            .then(data => {\n                this.processes = data;\n            });\n    }\n\n    setProcessValue(identifier, value) {\n        this.active_process_values[identifier] = value;\n        this.process_has_changed = true;\n    }\n\n    saveProcess(index) {\n        if (this.process_has_changed) {\n            let val = {'value':this.active_process_values};\n            this.client.fetch('/api/process/'+this.selected_process+'/', {\n                method: \"PUT\",\n                body: json(val),\n            }).then(response => response.json())\n            .then(data => {\n                this.processes.splice(index, 1, data);\n            });\n            this.process_has_changed = false;\n            this.selected_process = 0;\n        }\n    }\n\n    execute() {\n        // call ececute post then redirect\n        this.client.fetch('/package/'+package_id+'/execute/', {\n            method: \"POST\",\n        })\n        window.location.href = \"/package/\"+package_id+\"/status/\";\n    }\n\n    moveUp(processindex) {\n        let p1 = this.processes[processindex-1];\n        let p2 = this.processes[processindex];\n        let temp = p1.order;\n        p1.order = p2.order;\n        p2.order = temp;\n        this.processes.sort(function(a, b) {\n            return a.order - b.order;\n        });\n        //upload change to server.\n        let data = [{\"order\":p2.order, \"process_id\":p2.process_id}, {\"order\":p1.order, \"process_id\":p1.process_id}];\n        this.client.fetch('/api/package/'+package_id+'/process/', {\n            method: \"PUT\",\n            body: json(data)\n        })\n    }\n    moveDown(processindex) {\n        let p1 = this.processes[processindex+1];\n        let p2 = this.processes[processindex];\n        let temp = p1.order;\n        p1.order = p2.order;\n        p2.order = temp;\n        this.processes.sort(function(a, b) {\n            return a.order - b.order;\n        });\n        let data = [{\"order\":p1.order, \"process_id\":p1.process_id}, {\"order\":p2.order, \"process_id\":p2.process_id}];\n        this.client.fetch('/api/package/'+package_id+'/process/', {\n            method: \"PUT\",\n            body: json(data)\n        })\n    }\n\n    removeProcess(processindex) {\n        this.client.fetch('/api/process/'+this.processes[processindex].process_id+'/', {\n            method: \"DELETE\",\n        })\n        this.processes.splice(processindex, 1);\n    }\n}\n","/*! Copyright 2017 Axenu */\n\nimport {HttpClient,json} from 'aurelia-fetch-client';\n\ndeclare var package_id: any;\n\nexport class Index {\n    title='S.A.W';\n    description='Se statusen för paketet: ';\n    processes = [];\n    package = {};\n    removeWorkdir = false;\n    client = new HttpClient();\n    timer;\n    loading = false;\n\n    constructor() {\n        this.updateData();\n        this.timer = setInterval(() => {\n            this.updateData();\n        }, 5000);\n    }\n\n    updateData() {\n        this.loading = true;\n        this.client.fetch('/api/package/'+package_id+'/')\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                this.package = data;\n                this.processes = data['processes'];\n                this.loading = false;\n            });\n    }\n\n    removePackage() {\n        let body = {\"removeWorkdir\": this.removeWorkdir};\n        this.client.fetch('/api/package/'+package_id+'/', {\n            method: \"DELETE\",\n            body: json(body),\n        })\n            .then(response => {\n                console.log(response.json());\n                window.location.href = \"/\";\n            });\n    }\n\n    execute() {\n        // call ececute post then redirect\n        this.client.fetch('/package/'+package_id+'/execute/', {\n            method: \"POST\",\n        })\n    }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}